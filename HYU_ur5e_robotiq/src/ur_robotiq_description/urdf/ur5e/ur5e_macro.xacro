<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <!--
    Convenience wrapper for the 'ur_robot' macro which provides default values
    for the various "parameters files" parameters for a UR5e.

    This file can be used when composing a more complex scene with one or more
    UR5e robots.

    While the generic 'ur_robot' macro could also be used, it would require
    the user to provide values for all parameters, as that macro does not set
    any model-specific defaults (not even for the generic parameters, such as
    the visual and physical parameters and joint limits).

    Refer to the main 'ur_macro.xacro' in this package for information about
    use, contributors and limitations.

    NOTE: users will most likely want to override *at least* the
          'kinematics_parameters_file' parameter. Otherwise, a default kinematic
          model will be used, which will almost certainly not correspond to any
          real robot.
  -->
  <material name="light_grey"><color rgba="0.4 0.4 0.4 1.0" /></material>
  <xacro:macro name="ur5e_robot" params="
   prefix
   joint_limits_parameters_file:='$(find ur_description)/config/ur5e/joint_limits.yaml'
   kinematics_parameters_file:='$(find ur_description)/config/ur5e/default_kinematics.yaml'
   physical_parameters_file:='$(find ur_description)/config/ur5e/physical_parameters.yaml'
   visual_parameters_file:='$(find ur_description)/config/ur5e/visual_parameters.yaml'
   transmission_hw_interface:=hardware_interface/PositionJointInterface
   safety_limits:=false
   safety_pos_margin:=0.15
   safety_k_position:=20"
  >
    <xacro:include filename="$(find ur_robotiq_description)/urdf/ur5e/ur_macro.xacro"/>
    <xacro:ur_robot
      prefix="${prefix}"
      joint_limits_parameters_file="${joint_limits_parameters_file}"
      kinematics_parameters_file="${kinematics_parameters_file}"
      physical_parameters_file="${physical_parameters_file}"
      visual_parameters_file="${visual_parameters_file}"
      transmission_hw_interface="${transmission_hw_interface}"
      safety_limits="${safety_limits}"
      safety_pos_margin="${safety_pos_margin}"
      safety_k_position="${safety_k_position}"
    />
    
    <xacro:include filename="$(find robotiq_85_description)/urdf/robotiq_85_gripper.urdf.xacro" />
    <xacro:robotiq_85_gripper prefix="" parent="${prefix}tool0" >
      <origin xyz="0 0 0.001" rpy="0 -1.57 1.57"/>
    </xacro:robotiq_85_gripper>

    <link name="ur5e_table_link">
      <visual>
        <origin xyz="0 0 0.71" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ur_robotiq_description/meshes/UR5e_table.stl"/>
        </geometry>
        <material name="light_grey">
          <color rgba="0.75 0.75 0.75 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0.71" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://ur_robotiq_description/meshes/UR5e_table.stl"/>
        </geometry>
      </collision>
    </link>
    <joint name="ur5e_table_joint" type="fixed">
      <parent link="ur5e_table_link"/>
      <child link="${prefix}base_link"/>
      <origin xyz="0 0 0.71" rpy="0 0 0"/>
     </joint>
  </xacro:macro>
</robot>
